{
  "id": "employees",
  "realm": "employees",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": true,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": true,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "25ad2760-28f5-41f7-90d8-a1eb3b43454f",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "employees",
        "attributes": {}
      },
      {
        "id": "743ba490-a8cd-4234-bbe5-8f4f85289752",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "employees",
        "attributes": {}
      },
      {
        "id": "69687cb3-3173-4741-8f54-4a2b01bf82f7",
        "name": "suomifi-link",
        "composite": false,
        "clientRole": false,
        "containerId": "employees",
        "attributes": {}
      },
      {
        "id": "b7511c64-3dfd-4653-9606-cc3841c06bd6",
        "name": "default-roles-employees",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access",
            "uma_authorization"
          ]
        },
        "clientRole": false,
        "containerId": "employees",
        "attributes": {}
      }
    ],
    "client": {
      "realm-management": [
        {
          "id": "806d1da6-3458-43cf-ab70-9e832588a20d",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "4c724ad1-7fc0-4e1f-9fa8-00ee17f83e91",
          "attributes": {}
        },
        {
          "id": "e414d27b-ac3f-4952-9c58-168ecf896de4",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "4c724ad1-7fc0-4e1f-9fa8-00ee17f83e91",
          "attributes": {}
        },
        {
          "id": "86a87b68-c997-4ca8-8b65-966677381745",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "4c724ad1-7fc0-4e1f-9fa8-00ee17f83e91",
          "attributes": {}
        },
        {
          "id": "98ec962e-e9f0-464e-bc06-9b42c8192869",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "4c724ad1-7fc0-4e1f-9fa8-00ee17f83e91",
          "attributes": {}
        },
        {
          "id": "73a207f1-3e0a-4be3-85d1-33fa4c1a5505",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "4c724ad1-7fc0-4e1f-9fa8-00ee17f83e91",
          "attributes": {}
        },
        {
          "id": "a95d6241-fb13-470c-93fd-de7afe091873",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "4c724ad1-7fc0-4e1f-9fa8-00ee17f83e91",
          "attributes": {}
        },
        {
          "id": "18435d1c-2b72-47dc-9037-7fa269855703",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-groups",
                "query-users"
              ]
            }
          },
          "clientRole": true,
          "containerId": "4c724ad1-7fc0-4e1f-9fa8-00ee17f83e91",
          "attributes": {}
        },
        {
          "id": "f9e98f30-dcfd-41d9-817c-36ca757ee650",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "4c724ad1-7fc0-4e1f-9fa8-00ee17f83e91",
          "attributes": {}
        },
        {
          "id": "97fe47eb-5151-4f46-b08d-694efbba2343",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "4c724ad1-7fc0-4e1f-9fa8-00ee17f83e91",
          "attributes": {}
        },
        {
          "id": "cedb6592-c19e-42f1-9a0e-07168849f8b5",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "4c724ad1-7fc0-4e1f-9fa8-00ee17f83e91",
          "attributes": {}
        },
        {
          "id": "2bdce62c-51e5-4650-9edd-2b4b4968b092",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "4c724ad1-7fc0-4e1f-9fa8-00ee17f83e91",
          "attributes": {}
        },
        {
          "id": "1f8ad801-0a35-4f91-aa10-c67f7104d406",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "4c724ad1-7fc0-4e1f-9fa8-00ee17f83e91",
          "attributes": {}
        },
        {
          "id": "80074b5b-58c3-4531-b8df-c3c0ee50bf23",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "4c724ad1-7fc0-4e1f-9fa8-00ee17f83e91",
          "attributes": {}
        },
        {
          "id": "e62f964d-77be-4a8e-90e6-ce191069c2b7",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "manage-users",
                "manage-events",
                "manage-realm",
                "view-users",
                "manage-authorization",
                "impersonation",
                "query-clients",
                "create-client",
                "view-authorization",
                "manage-identity-providers",
                "query-users",
                "view-events",
                "view-clients",
                "view-realm",
                "query-groups",
                "manage-clients",
                "view-identity-providers",
                "query-realms"
              ]
            }
          },
          "clientRole": true,
          "containerId": "4c724ad1-7fc0-4e1f-9fa8-00ee17f83e91",
          "attributes": {}
        },
        {
          "id": "191e167e-98d6-4422-9745-5f17d4e71f08",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "4c724ad1-7fc0-4e1f-9fa8-00ee17f83e91",
          "attributes": {}
        },
        {
          "id": "1b905eff-58f2-4cb3-a244-28991ac4693f",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "4c724ad1-7fc0-4e1f-9fa8-00ee17f83e91",
          "attributes": {}
        },
        {
          "id": "726ffc4e-4406-49be-a499-b3b7d30e6046",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "4c724ad1-7fc0-4e1f-9fa8-00ee17f83e91",
          "attributes": {}
        },
        {
          "id": "504e5812-89b2-4c05-8d45-7c00e7b68898",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "4c724ad1-7fc0-4e1f-9fa8-00ee17f83e91",
          "attributes": {}
        },
        {
          "id": "3388967e-5e1f-40a3-aad4-8e0698a86b30",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "4c724ad1-7fc0-4e1f-9fa8-00ee17f83e91",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "admin-cli": [],
      "trevaka": [],
      "account-console": [],
      "broker": [],
      "account": [
        {
          "id": "61d47ad9-f3f8-4070-9711-9ff795c32443",
          "name": "manage-account",
          "composite": false,
          "clientRole": true,
          "containerId": "41aa78a0-0def-4cc3-8353-de7b38e67dd7",
          "attributes": {}
        },
        {
          "id": "2225fac7-f9f7-4792-8988-d5ca01fa8b46",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "41aa78a0-0def-4cc3-8353-de7b38e67dd7",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "b7511c64-3dfd-4653-9606-cc3841c06bd6",
    "name": "default-roles-employees",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "employees"
  },
  "requiredCredentials": [
    "password"
  ],
  "passwordPolicy": "length(8) and upperCase(1) and lowerCase(1) and digits(1) and passwordBlacklist(default.txt)",
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpSupportedApplications": [
    "FreeOTP",
    "Google Authenticator"
  ],
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account"
        ]
      }
    ]
  },
  "clients": [
    {
      "id": "41aa78a0-0def-4cc3-8353-de7b38e67dd7",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/employees/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/employees/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "f146b04a-88ed-4631-860e-d708e92d7a8b",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/employees/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/employees/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "330e2660-0031-46c1-96b0-4299e196a551",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "b2f3e340-8871-458d-8266-0186e25f8aa5",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "b0cec3ba-8b2b-4146-bd42-71ad88a44862",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "4c724ad1-7fc0-4e1f-9fa8-00ee17f83e91",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "c1d0e71c-ec9c-467c-86c0-47f2405d66dd",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/employees/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/admin/employees/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "6be7ec8e-9f61-485a-a83c-4819c00ebe14",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "3fffe824-2fe4-4a8b-a6cd-665b6ca5a496",
      "clientId": "trevaka",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "http://localhost:9099/api/internal/auth/evaka/login/callback"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "saml",
      "attributes": {
        "saml.force.post.binding": "true",
        "saml.multivalued.roles": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "saml.signing.certificate": "MIIDATCCAemgAwIBAgIUGf1uHWOWBuwP+opQvllWgw7ad8wwDQYJKoZIhvcNAQELBQAwEDEOMAwGA1UEAwwFZXZha2EwHhcNMjAxMjE2MTIzMjAxWhcNMzAxMjE0MTIzMjAxWjAQMQ4wDAYDVQQDDAVldmFrYTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxMkzLNRcp+upl7vzugGjbYNdDWeLU0GBu+B8ozUuUUd8ABrp/tkKin8OehqpLSMDj8wmtDN2gAtT7VS4nP8acGIgnZuNcRNg7oFqtLivYBoMef8p2E2w/GJJYaVCmovTQwPwNYl6BVsykR4fSoeCB4zRT/ROqA+/hqHRW2QVweqd5P76zJli/ryD0nNGyqIuXZqVvIJr1ZCMZeCUIg4a1j9mHfM94I0SMQkbpaO9FvR0E1SwvOUnQ9fM8gAXj6PCkMwrvYESSqOJsOaoImY6kVjtug6G0PcbaP/agzBKZDo/kq6YlfOXG5UUPWPo6vXxjDsHg1nmjbHVEKlUwDXIUCAwEAAaNTMFEwHQYDVR0OBBYEFMETqJ/xX6DItAHsg/nQoRmFfJZKMB8GA1UdIwQYMBaAFMETqJ/xX6DItAHsg/nQoRmFfJZKMA8GA1UdEwEB/wQFMAMBAf8wDQYJKoZIhvcNAQELBQADggEBAPK3o62BZU6TugVufG7mSqBWpVSqFhDOWC4Vdfk0gd9qlrINy0x0XJqF3CzV/D2/x1TOtpaqFOVDExnvCN1DwCyx2JHxE0SKFPVee+wCEPCXr3g4ug1q5A84DKve931JnbgIrI7BxUTaN4sVsaj2HenFqs8lRiZfcykqwT1jOuAmjty6P601kmwp86GMa7Bs6dL7dlFUbVuvk4DAaKq4X1Obpi/NQq++TkNs2mHxnfjx7cnPh+28Zj4wGJ936WJSHATBb8hw7pi5azpV2uNmYi7Gt40V0AnlY5k4guRRLBrIpC9gR9288IbdpHoJp1qWJA7u0+4tHjMlzY7QbNbHiVw=",
        "oidc.ciba.grant.enabled": "false",
        "backchannel.logout.session.required": "false",
        "client_credentials.use_refresh_token": "false",
        "saml.signature.algorithm": "RSA_SHA256",
        "saml.client.signature": "true",
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.encrypt": "true",
        "saml.server.signature": "true",
        "exclude.session.state.from.auth.response": "false",
        "saml.artifact.binding.identifier": "kPINBa/aB8C3D10BhifNhU61d/Y=",
        "saml.artifact.binding": "false",
        "saml_single_logout_service_url_redirect": "http://localhost:9099/api/internal/auth/evaka/logout/callback",
        "saml_force_name_id_format": "false",
        "saml.encryption.certificate": "MIIDATCCAemgAwIBAgIUGf1uHWOWBuwP+opQvllWgw7ad8wwDQYJKoZIhvcNAQELBQAwEDEOMAwGA1UEAwwFZXZha2EwHhcNMjAxMjE2MTIzMjAxWhcNMzAxMjE0MTIzMjAxWjAQMQ4wDAYDVQQDDAVldmFrYTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPxMkzLNRcp+upl7vzugGjbYNdDWeLU0GBu+B8ozUuUUd8ABrp/tkKin8OehqpLSMDj8wmtDN2gAtT7VS4nP8acGIgnZuNcRNg7oFqtLivYBoMef8p2E2w/GJJYaVCmovTQwPwNYl6BVsykR4fSoeCB4zRT/ROqA+/hqHRW2QVweqd5P76zJli/ryD0nNGyqIuXZqVvIJr1ZCMZeCUIg4a1j9mHfM94I0SMQkbpaO9FvR0E1SwvOUnQ9fM8gAXj6PCkMwrvYESSqOJsOaoImY6kVjtug6G0PcbaP/agzBKZDo/kq6YlfOXG5UUPWPo6vXxjDsHg1nmjbHVEKlUwDXIUCAwEAAaNTMFEwHQYDVR0OBBYEFMETqJ/xX6DItAHsg/nQoRmFfJZKMB8GA1UdIwQYMBaAFMETqJ/xX6DItAHsg/nQoRmFfJZKMA8GA1UdEwEB/wQFMAMBAf8wDQYJKoZIhvcNAQELBQADggEBAPK3o62BZU6TugVufG7mSqBWpVSqFhDOWC4Vdfk0gd9qlrINy0x0XJqF3CzV/D2/x1TOtpaqFOVDExnvCN1DwCyx2JHxE0SKFPVee+wCEPCXr3g4ug1q5A84DKve931JnbgIrI7BxUTaN4sVsaj2HenFqs8lRiZfcykqwT1jOuAmjty6P601kmwp86GMa7Bs6dL7dlFUbVuvk4DAaKq4X1Obpi/NQq++TkNs2mHxnfjx7cnPh+28Zj4wGJ936WJSHATBb8hw7pi5azpV2uNmYi7Gt40V0AnlY5k4guRRLBrIpC9gR9288IbdpHoJp1qWJA7u0+4tHjMlzY7QbNbHiVw=",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "true",
        "display.on.consent.screen": "false",
        "saml_name_id_format": "username",
        "saml.onetimeuse.condition": "false",
        "saml_signature_canonicalization_method": "http://www.w3.org/2001/10/xml-exc-c14n#"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "ebcd763b-946d-4d45-92b9-e56a7eecf82c",
          "name": "email",
          "protocol": "saml",
          "protocolMapper": "saml-user-property-mapper",
          "consentRequired": false,
          "config": {
            "attribute.nameformat": "Basic",
            "user.attribute": "email",
            "friendly.name": "email",
            "attribute.name": "email"
          }
        },
        {
          "id": "f8f9b1e3-eb7e-4069-b531-31b244363c73",
          "name": "id",
          "protocol": "saml",
          "protocolMapper": "saml-user-property-mapper",
          "consentRequired": false,
          "config": {
            "attribute.nameformat": "Basic",
            "user.attribute": "id",
            "friendly.name": "id",
            "attribute.name": "id"
          }
        },
        {
          "id": "e70931ed-9205-4765-b039-de91225e321e",
          "name": "firstName",
          "protocol": "saml",
          "protocolMapper": "saml-user-property-mapper",
          "consentRequired": false,
          "config": {
            "attribute.nameformat": "Basic",
            "user.attribute": "firstName",
            "friendly.name": "firstName",
            "attribute.name": "firstName"
          }
        },
        {
          "id": "14dff552-4139-4367-a6a9-e82414bf3795",
          "name": "lastName",
          "protocol": "saml",
          "protocolMapper": "saml-user-property-mapper",
          "consentRequired": false,
          "config": {
            "attribute.nameformat": "Basic",
            "user.attribute": "lastName",
            "friendly.name": "lastName",
            "attribute.name": "lastName"
          }
        }
      ],
      "defaultClientScopes": [
        "role_list"
      ],
      "optionalClientScopes": []
    }
  ],
  "clientScopes": [
    {
      "id": "c8b620b3-0592-4c43-83a3-9a7f7cc0254f",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "f1886e2b-cd40-4ce3-9461-a43d1e1404cd",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "abb0ef18-8adc-44b0-ad3e-93acb3f9281b",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "ac5106c4-5f04-44ea-a17f-adc724d493f3",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "3b118845-7a48-4ac6-917f-6318b35aca5d",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "0a3201fb-10de-4ea4-8eea-8fe211db2888",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "e73548d5-0b07-4b06-beff-4d909684ff5c",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        },
        {
          "id": "f9430fc8-da9a-4ef6-91d9-1a5ffa704eca",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "b3feaf9f-76d1-4e64-af69-b3d56412d854",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "67b7eb3a-5a44-46c7-a80c-caae91e56107",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "eb6471cb-e3cf-4f2b-94dd-26940dc0ffcb",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        },
        {
          "id": "de38fc33-4996-46e8-a509-886b7082b8f3",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    },
    {
      "id": "9631b770-c6cf-4caa-81be-478607de3c30",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "9c83ba1d-186a-49f3-b0b8-44fed667b386",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "ff09363e-48af-4b1d-9c58-ce97b4998aff",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "e0dc8aaf-f84b-4c9b-80fd-eea18bd7145c",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4d3fc34c-3aef-4052-bb27-205f21844d50",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "73431c9d-aec4-4824-92ca-76bce3070fb7",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4ecfb6a0-85e5-41d3-a3bd-b8d78b4378c5",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "425f5895-33ea-445d-b1f0-e269bd70b6a0",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "3ddedc9f-8e51-4757-8c19-18368fbc39da",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "String"
          }
        },
        {
          "id": "bbb5855d-62a7-4d42-bba1-b4907e39d221",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "5a91c52d-a466-4775-8238-950df96fc65c",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "61f44d97-1178-4826-a46e-354bb0cb5ca2",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "b1feffbe-ab22-4614-a1b9-7a4b195864d2",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d8379e55-75b0-4c84-a442-302d30cedce2",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "a668f5ba-e15c-474e-b030-d156b673f6a7",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "e3dcd00e-ce09-4dd1-a935-2c02b17bf3c8",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "1b82d9b4-3208-4da3-bb50-6c3cff772317",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "924346ad-f68a-4ff6-88d2-af0b916ee1de",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "03042fc4-dbbc-4e56-9253-98aab62f215f",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "id": "343374d6-b865-4748-a7c4-9c8d7cb827c1",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "5742e982-bec8-42da-bdf8-feb01a3a408d",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "0f4f611b-de89-48ac-af48-cac054b6cac5",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        },
        {
          "id": "e1b9f47d-575c-42f8-9d9d-34395db6daf0",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "email",
    "web-origins",
    "role_list",
    "roles",
    "profile"
  ],
  "defaultOptionalClientScopes": [
    "microprofile-jwt",
    "phone",
    "offline_access",
    "address"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {
    "starttls": "",
    "auth": "",
    "port": "1025",
    "host": "smtp",
    "from": "noreply@trevaka.local",
    "ssl": ""
  },
  "loginTheme": "evaka-tampere",
  "emailTheme": "evaka-tampere",
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [
    {
      "alias": "saml",
      "displayName": "suomi.fi",
      "internalId": "d01adee7-880e-40a8-be78-c9606950a8a7",
      "providerId": "saml",
      "enabled": true,
      "updateProfileFirstLoginMode": "on",
      "trustEmail": false,
      "storeToken": false,
      "addReadTokenRoleOnCreate": false,
      "authenticateByDefault": false,
      "linkOnly": false,
      "firstBrokerLoginFlowAlias": "saml",
      "config": {
        "hideOnLoginPage": "true",
        "postBindingLogout": "true",
        "nameIDPolicyFormat": "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
        "postBindingResponse": "true",
        "principalAttribute": "nationalIdentificationNumber",
        "singleLogoutServiceUrl": "http://localhost:8081/identification/idp/profile/SAML2/POST/SLO",
        "entityId": "http://localhost:8080/auth/realms/employees",
        "signatureAlgorithm": "RSA_SHA256",
        "encryptionAlgorithm": "RSA-OAEP",
        "xmlSigKeyInfoKeyNameTransformer": "KEY_ID",
        "useJwksUrl": "true",
        "allowCreate": "true",
        "wantAssertionsSigned": "true",
        "wantAssertionsEncrypted": "true",
        "authnContextComparisonType": "exact",
        "postBindingAuthnRequest": "true",
        "syncMode": "IMPORT",
        "singleSignOnServiceUrl": "http://localhost:8081/identification/idp/profile/SAML2/POST/SSO",
        "wantAuthnRequestsSigned": "true",
        "principalType": "FRIENDLY_ATTRIBUTE"
      }
    }
  ],
  "identityProviderMappers": [
    {
      "id": "d9585912-28e9-416e-9663-29959ae9b0d6",
      "name": "sn",
      "identityProviderAlias": "saml",
      "identityProviderMapper": "saml-user-attribute-idp-mapper",
      "config": {
        "syncMode": "FORCE",
        "user.attribute": "lastName",
        "attributes": "[]",
        "attribute.friendly.name": "sn"
      }
    },
    {
      "id": "c16f92b6-b42a-4f1d-ac0c-788ad74dc161",
      "name": "givenName",
      "identityProviderAlias": "saml",
      "identityProviderMapper": "saml-user-attribute-idp-mapper",
      "config": {
        "syncMode": "FORCE",
        "user.attribute": "firstName",
        "attributes": "[]",
        "attribute.friendly.name": "givenName"
      }
    },
    {
      "id": "3ad4a439-afa1-49e8-9ca8-4f409ba465e8",
      "name": "suomifi-link",
      "identityProviderAlias": "saml",
      "identityProviderMapper": "oidc-hardcoded-role-idp-mapper",
      "config": {
        "syncMode": "FORCE",
        "attributes": "[]",
        "role": "suomifi-link"
      }
    }
  ],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "0ee5799e-9411-4745-99cd-7ceeccd96f9d",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "id": "d3425370-9c18-47b1-a25b-ce190eb5f9f8",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "8ae278e7-9abc-470a-b5d5-b75e59110c8d",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "5fb12767-86a7-4769-91c3-ca9f9501a290",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-address-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-full-name-mapper",
            "saml-role-list-mapper",
            "saml-user-attribute-mapper",
            "saml-user-property-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-usermodel-property-mapper"
          ]
        }
      },
      {
        "id": "faa489a7-961d-4be5-bc1c-0fd06c1c5a78",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "08d0ec92-4fab-46c5-b4f4-3dd7512e22ad",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "a8d56116-ef9f-45d8-a660-3932b1e9fb4c",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "d5f323e3-ad0f-4c41-8337-81986e87f979",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-address-mapper",
            "oidc-full-name-mapper",
            "saml-user-attribute-mapper",
            "saml-user-property-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-role-list-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-usermodel-attribute-mapper"
          ]
        }
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "095cceda-9a09-4efe-a6cd-da4b26170851",
        "name": "rsa",
        "providerId": "rsa",
        "subComponents": {},
        "config": {
          "privateKey": [
            "-----BEGIN RSA PRIVATE KEY-----\nMIIEpQIBAAKCAQEAmESdMSiRfoZZqApunU1HkdoHFY9BIoi1NFIgn+O9K3monLml\nmgu0JfmPLtz9ZsL/480Xx8vcPENzXYiGuOC+hUAJ7OlT8pVcOTusi8Q2tQopOqYg\nGC1/zjGJHjgDqCj2Lw834WLqG63mnqND/xrqp106M8yiWFvCkvZTXEXAmzzV2w4n\nrTxfZlQwr/XjIoE2rDK4BFCZ3NFCNd6wPCprGRBTrgxrrl83/+xi8qZsv9fDmvlf\nMFZjZO1kFnyGV12ow9G+7qyisHOKiX80NG1ufalSzCBDPpAsXef7BwEa34DJyOo+\nBhSTp5snIUHqmorbtubcssB2W2vpgGZobHnVKQIDAQABAoIBAQCDVit/y04zpA6R\nMu5WH+Irm7OglP/JmcEyb+RUBUuVxEn7ZOXCCXZJiwhFk7e+e1PcWXq5is1b7ZIE\ni04pCTFMHgBxqJAQHWR+uUoLBCNr5GfLfp8QO66RW4i51/bPhQVTcfzxGzByz3ys\nOIbd84mS8obRRyCAtiUOPgmI/WE0g+AE5XMXZPKoTCiTI/l98EmNwlGTDqxDpT0f\n69o0uBvjxvIxflDSkLJVmzEYTempJuIAoAKD52bVYQjOw4orwvLu7/vJcBds64Nq\nQPwJxekPx2wHmHbunSjk5ukTxtqHrTa7zpD5nDnSnnb2xSpEypboCndQFjiUDhQ8\nPQJQZT9BAoGBAMnQA0IKK3Xrhr+18acCcaXTWMSXQ6FGbgp7njm0cMn7gCliX6Pu\nTAONDETkkqrgzCjwQsmn5CRUsgemiAWzGlKPoFRtQ36nYPjq0ZLvKU+BmIHUR2Bk\noFMuIMLwC20R2yGjNjTYXoa4LvvpPoxf7va308ttheqJ1EioXzjiTejTAoGBAMEn\nD0foFW50phd9+zFR8PQyuFUmVDO0O/DpPMtOLoEI06urm/WKcq89RDnvpgtixkg/\nB29UOvvDUQjkahBnoJkl57+aWwHZF0b108mngzh29IDnmIxyhLgQL8mc3Y65imtQ\nEXNwmqUtoLssJbWR+StqTv6ZulNmCDFtN4XZ18yTAoGBAIDOkFXFMeoIkq+ny/3h\ndHH3i++l8BduYWu1bM692UNBj5JaZFq4DLIzg0IxdV81LXlvp+EXlGiP2jVB2A1z\nO/i4DQf12R9sa1tUXMDgfshtGc67k3b1otKUXXquRUyvGeLFTiK6etKXmf1U6IQl\n8tprh/WOCOwiXmildmlTH5DbAoGAExqb5k7MH9qlutkZCS3DmUOS+8kItvxymUdY\nXftjmhuXY/lbOZPx9+clYl2TnLiuR+MEBzzbgJ822pxM6UZ2me8n1smbirlAFiKm\nSeGpluIdGMrPScTh35qqP1SmjUFIsYh/0V0nzoKOzTR2nljLvkGLgp8N0MXctZbJ\n0RFUyMUCgYEAoKgAyC9ZwvAkplIGEJ/WUxefAfXhrC+3liasx1fbuMzJaF0voMo0\nCcwDA1euELpRUjVDbM+x6zOYHfm+fNtrP6hK7pVm1KxoyBJO6zP37cYos02IsB7A\ncd32/cFqniUanUa2rFYKpbc8w15rV7rJhr2mCwla1wrOuN6fCFGh28k=\n-----END RSA PRIVATE KEY-----\n"
          ],
          "certificate": [
            "MIIDATCCAemgAwIBAgIUHzkAYVMiQywKss92BD1CqrZKcMEwDQYJKoZIhvcNAQELBQAwEDEOMAwGA1UEAwwFZXZha2EwHhcNMjAxMjE2MTE1NjEwWhcNMzAxMjE0MTE1NjEwWjAQMQ4wDAYDVQQDDAVldmFrYTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJhEnTEokX6GWagKbp1NR5HaBxWPQSKItTRSIJ/jvSt5qJy5pZoLtCX5jy7c/WbC/+PNF8fL3DxDc12IhrjgvoVACezpU/KVXDk7rIvENrUKKTqmIBgtf84xiR44A6go9i8PN+Fi6hut5p6jQ/8a6qddOjPMolhbwpL2U1xFwJs81dsOJ608X2ZUMK/14yKBNqwyuARQmdzRQjXesDwqaxkQU64Ma65fN//sYvKmbL/Xw5r5XzBWY2TtZBZ8hlddqMPRvu6sorBziol/NDRtbn2pUswgQz6QLF3n+wcBGt+AycjqPgYUk6ebJyFB6pqK27bm3LLAdltr6YBmaGx51SkCAwEAAaNTMFEwHQYDVR0OBBYEFABgD77k623LS3GnhaNKvUjUw1l6MB8GA1UdIwQYMBaAFABgD77k623LS3GnhaNKvUjUw1l6MA8GA1UdEwEB/wQFMAMBAf8wDQYJKoZIhvcNAQELBQADggEBAIiA3vuvuQsNNMUH/b5Dmmq8SP1Mrfqx584FWOD8gKhBVvlFTKJsZC8Vuk39ynfz/g0eN3sRIywk/jMHJTV+zmS2YcLGKRvsdCbCA9v9R5Qh09E8HBsHTuFxgA09FN4OrxqRgv1RaXB5eEvzHWb7iemE1dW73TX9o0VEgF45I1ZrQWdq+SyOOCFa9dofADmrAI0EDARHPOUGEVrENwwk6au85VduLbhQ/rfw0hzig2w0HU4FVVELQQOZAwnrR+Acwl04W/DHp1U//MTAgpQ1FXnniCBi/duuXlLdpsbIyK3XlUGfjPnhIvFVH8EHI5BsG7vs+PMfTAFMbf8tDGpS15Q="
          ],
          "active": [
            "true"
          ],
          "priority": [
            "0"
          ],
          "enabled": [
            "true"
          ],
          "algorithm": [
            "RS256"
          ]
        }
      },
      {
        "id": "3ffaf362-63b6-49d7-b1dc-a304ecb8aef5",
        "name": "rsa-enc",
        "providerId": "rsa-enc",
        "subComponents": {},
        "config": {
          "privateKey": [
            "-----BEGIN RSA PRIVATE KEY-----\nMIIEpQIBAAKCAQEAmESdMSiRfoZZqApunU1HkdoHFY9BIoi1NFIgn+O9K3monLml\nmgu0JfmPLtz9ZsL/480Xx8vcPENzXYiGuOC+hUAJ7OlT8pVcOTusi8Q2tQopOqYg\nGC1/zjGJHjgDqCj2Lw834WLqG63mnqND/xrqp106M8yiWFvCkvZTXEXAmzzV2w4n\nrTxfZlQwr/XjIoE2rDK4BFCZ3NFCNd6wPCprGRBTrgxrrl83/+xi8qZsv9fDmvlf\nMFZjZO1kFnyGV12ow9G+7qyisHOKiX80NG1ufalSzCBDPpAsXef7BwEa34DJyOo+\nBhSTp5snIUHqmorbtubcssB2W2vpgGZobHnVKQIDAQABAoIBAQCDVit/y04zpA6R\nMu5WH+Irm7OglP/JmcEyb+RUBUuVxEn7ZOXCCXZJiwhFk7e+e1PcWXq5is1b7ZIE\ni04pCTFMHgBxqJAQHWR+uUoLBCNr5GfLfp8QO66RW4i51/bPhQVTcfzxGzByz3ys\nOIbd84mS8obRRyCAtiUOPgmI/WE0g+AE5XMXZPKoTCiTI/l98EmNwlGTDqxDpT0f\n69o0uBvjxvIxflDSkLJVmzEYTempJuIAoAKD52bVYQjOw4orwvLu7/vJcBds64Nq\nQPwJxekPx2wHmHbunSjk5ukTxtqHrTa7zpD5nDnSnnb2xSpEypboCndQFjiUDhQ8\nPQJQZT9BAoGBAMnQA0IKK3Xrhr+18acCcaXTWMSXQ6FGbgp7njm0cMn7gCliX6Pu\nTAONDETkkqrgzCjwQsmn5CRUsgemiAWzGlKPoFRtQ36nYPjq0ZLvKU+BmIHUR2Bk\noFMuIMLwC20R2yGjNjTYXoa4LvvpPoxf7va308ttheqJ1EioXzjiTejTAoGBAMEn\nD0foFW50phd9+zFR8PQyuFUmVDO0O/DpPMtOLoEI06urm/WKcq89RDnvpgtixkg/\nB29UOvvDUQjkahBnoJkl57+aWwHZF0b108mngzh29IDnmIxyhLgQL8mc3Y65imtQ\nEXNwmqUtoLssJbWR+StqTv6ZulNmCDFtN4XZ18yTAoGBAIDOkFXFMeoIkq+ny/3h\ndHH3i++l8BduYWu1bM692UNBj5JaZFq4DLIzg0IxdV81LXlvp+EXlGiP2jVB2A1z\nO/i4DQf12R9sa1tUXMDgfshtGc67k3b1otKUXXquRUyvGeLFTiK6etKXmf1U6IQl\n8tprh/WOCOwiXmildmlTH5DbAoGAExqb5k7MH9qlutkZCS3DmUOS+8kItvxymUdY\nXftjmhuXY/lbOZPx9+clYl2TnLiuR+MEBzzbgJ822pxM6UZ2me8n1smbirlAFiKm\nSeGpluIdGMrPScTh35qqP1SmjUFIsYh/0V0nzoKOzTR2nljLvkGLgp8N0MXctZbJ\n0RFUyMUCgYEAoKgAyC9ZwvAkplIGEJ/WUxefAfXhrC+3liasx1fbuMzJaF0voMo0\nCcwDA1euELpRUjVDbM+x6zOYHfm+fNtrP6hK7pVm1KxoyBJO6zP37cYos02IsB7A\ncd32/cFqniUanUa2rFYKpbc8w15rV7rJhr2mCwla1wrOuN6fCFGh28k=\n-----END RSA PRIVATE KEY-----\n"
          ],
          "certificate": [
            "MIIDATCCAemgAwIBAgIUHzkAYVMiQywKss92BD1CqrZKcMEwDQYJKoZIhvcNAQELBQAwEDEOMAwGA1UEAwwFZXZha2EwHhcNMjAxMjE2MTE1NjEwWhcNMzAxMjE0MTE1NjEwWjAQMQ4wDAYDVQQDDAVldmFrYTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJhEnTEokX6GWagKbp1NR5HaBxWPQSKItTRSIJ/jvSt5qJy5pZoLtCX5jy7c/WbC/+PNF8fL3DxDc12IhrjgvoVACezpU/KVXDk7rIvENrUKKTqmIBgtf84xiR44A6go9i8PN+Fi6hut5p6jQ/8a6qddOjPMolhbwpL2U1xFwJs81dsOJ608X2ZUMK/14yKBNqwyuARQmdzRQjXesDwqaxkQU64Ma65fN//sYvKmbL/Xw5r5XzBWY2TtZBZ8hlddqMPRvu6sorBziol/NDRtbn2pUswgQz6QLF3n+wcBGt+AycjqPgYUk6ebJyFB6pqK27bm3LLAdltr6YBmaGx51SkCAwEAAaNTMFEwHQYDVR0OBBYEFABgD77k623LS3GnhaNKvUjUw1l6MB8GA1UdIwQYMBaAFABgD77k623LS3GnhaNKvUjUw1l6MA8GA1UdEwEB/wQFMAMBAf8wDQYJKoZIhvcNAQELBQADggEBAIiA3vuvuQsNNMUH/b5Dmmq8SP1Mrfqx584FWOD8gKhBVvlFTKJsZC8Vuk39ynfz/g0eN3sRIywk/jMHJTV+zmS2YcLGKRvsdCbCA9v9R5Qh09E8HBsHTuFxgA09FN4OrxqRgv1RaXB5eEvzHWb7iemE1dW73TX9o0VEgF45I1ZrQWdq+SyOOCFa9dofADmrAI0EDARHPOUGEVrENwwk6au85VduLbhQ/rfw0hzig2w0HU4FVVELQQOZAwnrR+Acwl04W/DHp1U//MTAgpQ1FXnniCBi/duuXlLdpsbIyK3XlUGfjPnhIvFVH8EHI5BsG7vs+PMfTAFMbf8tDGpS15Q="
          ],
          "active": [
            "true"
          ],
          "priority": [
            "0"
          ],
          "enabled": [
            "true"
          ],
          "algorithm": [
            "RSA-OAEP"
          ]
        }
      },
      {
        "id": "c1f2a7a0-a840-4b34-9fe1-8ed21429df7a",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS256"
          ]
        }
      },
      {
        "id": "f4b49454-1edc-47ee-95de-4983956d5a49",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": true,
  "supportedLocales": [
    "fi"
  ],
  "defaultLocale": "fi",
  "authenticationFlows": [
    {
      "id": "cbb86abd-d1a2-4f00-bfb4-e4ae40566484",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "e6806d60-ab4c-4726-8b14-ce2feafcd258",
      "alias": "Authentication Options",
      "description": "Authentication options.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "basic-auth",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "basic-auth-otp",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 30,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "4d3fa4ee-873c-4da1-a78d-a534c119e070",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "381e5314-60f3-4052-9ed6-715097bb3171",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "e6c0311b-f2dd-4146-b19f-42f6989fcd2d",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "2cce556f-ea5e-4ede-8f1e-4ee288bed68d",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "e0330a0d-a109-4d51-b8f7-3e36960e86f4",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "071c1b6f-bc54-4db4-a09a-394cf96e043f",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "f5cf3c69-97a1-41d1-b81f-f2742556d173",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "91fc89f4-af53-4302-8605-00f345388262",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "flowAlias": "forms",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "3bedf02e-ed11-4ce0-afe3-2e55cbbfa5a0",
      "alias": "browser-saml",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "flowAlias": "browser-saml forms",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "ad129ada-8101-48cb-8a2b-d7cb77fe6e20",
      "alias": "browser-saml Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "d40ef2f4-0453-4acb-b52e-d69903499e3e",
      "alias": "browser-saml forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "flowAlias": "saml-link-flow",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 21,
          "flowAlias": "browser-saml Browser - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "3dc44f5e-71ae-4f8c-988d-7bcceba8910a",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "f26e094d-a605-4f59-8295-7bf7f91ee3ea",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "9cf95453-074b-487f-aaa9-dd1dc984236c",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "7f1cc1cf-e5ee-48c1-8ec8-aa00f257c328",
      "alias": "evaka-reset-password",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 31,
          "flowAlias": "reset-saml-link-flow",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 32,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "afc0b43a-b792-4527-a00c-4056c11774a4",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "5a4621c1-ea74-4d03-9193-316dd9fef816",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "6b6f138a-a8e6-4eac-9a7e-e3cd5760d39e",
      "alias": "http challenge",
      "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "no-cookie-redirect",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "flowAlias": "Authentication Options",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "95bf96ad-3db7-43db-97e8-249fc3c35b87",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "flowAlias": "registration form",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "14971a15-fe6d-406d-a4cb-c68a95354687",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-profile-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 40,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "fbbce81f-77a0-4ea2-ba74-bcb4a8adfe85",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "229140ec-5c90-43fc-bab5-c2a119e9db5c",
      "alias": "reset-saml-link-flow",
      "description": "",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "not suomifi role",
          "authenticator": "conditional-user-role",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 0,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorConfig": "saml",
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 1,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "35b8668c-c650-4d8d-a595-f065678992e9",
      "alias": "saml",
      "description": "",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 0,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "bf9b6dfc-31c8-4462-a4f2-c287e0fbae05",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "140f594e-3e77-4855-9cb1-b48557a8a064",
      "alias": "saml-link-flow",
      "description": "",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "not suomifi role",
          "authenticator": "conditional-user-role",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 0,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorConfig": "saml",
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 1,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "58bce6ce-0b6c-4cb8-a75b-ea659e939b4c",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "9552e332-f6fc-464a-bb87-012d4e63bfe8",
      "alias": "not suomifi role",
      "config": {
        "negate": "true",
        "condUserRole": "suomifi-link"
      }
    },
    {
      "id": "b594c697-bf56-4f0c-a3d9-e01274542546",
      "alias": "not suomifi role",
      "config": {
        "negate": "true",
        "condUserRole": "suomifi-link"
      }
    },
    {
      "id": "656603db-3c0c-45c2-af2e-c79a448aaf58",
      "alias": "not suomifi role",
      "config": {
        "negate": "true",
        "condUserRole": "suomifi-link"
      }
    },
    {
      "id": "00dbaa26-1a68-440d-baa8-7ec4073dc9e3",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    },
    {
      "id": "4a9cd752-e501-49a5-99a1-d4ce2638266c",
      "alias": "saml",
      "config": {
        "defaultProvider": "saml"
      }
    },
    {
      "id": "655e3871-7332-4716-900e-3d7ab13f31ad",
      "alias": "saml",
      "config": {
        "defaultProvider": "saml"
      }
    },
    {
      "id": "bbf5e2b0-0d29-4c8a-b0a8-f9c7e320cf6e",
      "alias": "saml",
      "config": {
        "defaultProvider": "saml"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "terms_and_conditions",
      "name": "Terms and Conditions",
      "providerId": "terms_and_conditions",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser-saml",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "evaka-reset-password",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DeviceCodeLifespan": "600",
    "clientOfflineSessionMaxLifespan": "0",
    "oauth2DevicePollingInterval": "5",
    "clientSessionIdleTimeout": "0",
    "clientSessionMaxLifespan": "0",
    "clientOfflineSessionIdleTimeout": "0",
    "cibaInterval": "5"
  },
  "keycloakVersion": "14.0.0",
  "userManagedAccessAllowed": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}
