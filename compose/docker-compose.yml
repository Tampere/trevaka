# Docker compose for trying out the trevaka/service docker image locally
# Scavenged from evaka integration testing and e2e compose files
#
version: '3.5'

services:
  db:
    build: ../evaka/compose/db
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: "pg_isready -U postgres"
      interval: 2s
      timeout: 5s
      retries: 5

  db_it:
    build: ../evaka/compose/db-integration-test
    ports:
      - "15432:5432"
    healthcheck:
      test: "pg_isready -U postgres"
      interval: 2s
      timeout: 5s
      retries: 5

  redis:
    image: redis:4-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: '[ "$$(redis-cli -h 127.0.0.1 ping)" == "PONG" ]'
      interval: 1s
      timeout: 5s
      retries: 5

  s3.mock.evaka:
    image: adobe/s3mock
    ports:
      - "9876:9090"
    volumes:
      - s3-data:/data
    environment:
      ROOT: /data
    healthcheck:
      test: [ "CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9090" ]
      interval: 1s
      timeout: 5s
      retries: 5

  trevaka-srv:
    image: trevaka/service
    ports:
      - "8888:8888"
    hostname: trevaka-srv
    depends_on:
      - db
      - redis
    env_file:
      - .env
    environment:
      VOLTTI_ENV: local
      SPRING_PROFILES_ACTIVE: local
      SPRING_PROFILES_INCLUDE: enable_dev_api,enable_mock_integration_endpoint
      JAVA_OPTS: -server -Djava.security.egd=file:/dev/./urandom -Xms1024m -Xss512k -Xmx1024m -XX:TieredStopAtLevel=1
      FLYWAY_USERNAME: ${EVAKA_SERVICE_FLYWAY_USERNAME}
      FLYWAY_PASSWORD: ${EVAKA_SERVICE_FLYWAY_PASSWORD}
      FLYWAY_URL: jdbc:postgresql://${EVAKA_DATABASE_HOST}:${EVAKA_DATABASE_PORT}/${EVAKA_SERVICE_DATABASE_NAME}
      FLYWAY_PLACEHOLDERS_MIGRATION_USER: ${EVAKA_SERVICE_FLYWAY_USERNAME}
      FLYWAY_PLACEHOLDERS_APPLICATION_USER: ${EVAKA_SERVICE_APPLICATION_USERNAME}
      SPRING_DATASOURCE_URL: jdbc:postgresql://${EVAKA_DATABASE_HOST}:${EVAKA_DATABASE_PORT}/${EVAKA_SERVICE_DATABASE_NAME}
      SPRING_DATASOURCE_USERNAME: ${EVAKA_SERVICE_APPLICATION_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${EVAKA_SERVICE_APPLICATION_PASSWORD}
      SPRING_MAIN_BANNER_MODE: "off"
      # DEBUG: "true"
      # LOGGING_LEVEL_FI_ESPOO_EVAKA: DEBUG
      FI_ESPOO_VOLTTI_DOCUMENT_BUCKET_CLUBDECISION: evaka-clubdecisions-dev
      FI_ESPOO_VOLTTI_DOCUMENT_BUCKET_DAYCAREDECISION: evaka-daycaredecisions-dev
      FI_ESPOO_VOLTTI_DOCUMENT_BUCKET_PAYMENTDECISION: evaka-paymentdecisions-dev
      FI_ESPOO_VOLTTI_S3MOCK_URL: ${S3MOCK_URL}
      FI_ESPOO_INTEGRATION_INVOICE_ENABLED: "false"
      FI_ESPOO_EVAKA_MESSAGE_ENABLED: "false"
      FI_ESPOO_INTEGRATION_VARDA_URL: "http://localhost:8888/mock-integration/varda/api"
      FI_ESPOO_INTEGRATION_BASIC_AUTH: ""
      FI_ESPOO_VARDA_FORCE_SYNC: "false"
      FI_ESPOO_VARDA_ORGANIZER: "Tampere"
      FI_ESPOO_INTEGRATION_KOSKI_URL: ""
      FI_ESPOO_INTEGRATION_KOSKI_USER: ""
      FI_ESPOO_INTEGRATION_KOSKI_SECRET: ""
      FI_ESPOO_INTEGRATION_KOSKI_SOURCE_SYSTEM: ""
      REDIS_URL: ${EVAKA_REDIS_HOST}
      REDIS_PORT: ${EVAKA_REDIS_PORT}
      REDIS_PASSWORD: ""
      REDIS_SSL: "false"
    restart: unless-stopped


volumes:
  db-data:
    driver: local
  s3-data:
    driver: local
