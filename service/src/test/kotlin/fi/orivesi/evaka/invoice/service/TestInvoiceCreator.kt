// SPDX-FileCopyrightText: 2024 Tampere region
//
// SPDX-License-Identifier: LGPL-2.1-or-later

package fi.orivesi.evaka.invoice.service

import fi.espoo.evaka.daycare.CareType
import fi.espoo.evaka.daycare.domain.ProviderType
import fi.espoo.evaka.invoicing.domain.InvoiceDetailed
import fi.espoo.evaka.invoicing.domain.InvoiceRowDetailed
import fi.espoo.evaka.invoicing.domain.InvoiceStatus
import fi.espoo.evaka.invoicing.domain.PersonDetailed
import fi.espoo.evaka.invoicing.service.ProductKey
import fi.espoo.evaka.shared.AreaId
import fi.espoo.evaka.shared.DaycareId
import fi.espoo.evaka.shared.InvoiceId
import fi.espoo.evaka.shared.InvoiceRowId
import fi.espoo.evaka.shared.PersonId
import fi.espoo.evaka.shared.domain.HelsinkiDateTime
import java.time.LocalDate
import java.time.LocalDateTime
import java.util.*

fun validInvoice(): InvoiceDetailed {
    val headOfFamily = validPerson()
    val child1 = PersonDetailed(
        PersonId(UUID.randomUUID()),
        LocalDate.of(2018, 1, 1),
        null,
        "Matti",
        "Meikäläinen",
        null,
        "",
        "",
        "",
        "",
        null,
        "",
        null,
        restrictedDetailsEnabled = false,
    )
    val child2 = PersonDetailed(
        PersonId(UUID.randomUUID()),
        LocalDate.of(2015, 11, 26),
        null,
        "Maiju",
        "Meikäläinen",
        null,
        "",
        "",
        "",
        "",
        null,
        "",
        null,
        restrictedDetailsEnabled = false,
    )
    val child3 = PersonDetailed(
        PersonId(UUID.randomUUID()),
        LocalDate.of(2018, 1, 1),
        null,
        "Matti",
        "Meikäläinen",
        null,
        "",
        "",
        "",
        "",
        null,
        "",
        null,
        restrictedDetailsEnabled = false,
    )
    val child4 = PersonDetailed(
        PersonId(UUID.randomUUID()),
        LocalDate.of(2018, 1, 1),
        null,
        "Matti",
        "Meikäläinen",
        null,
        "",
        "",
        "",
        "",
        null,
        "",
        null,
        restrictedDetailsEnabled = false,
    )
    val child5 = PersonDetailed(
        PersonId(UUID.randomUUID()),
        LocalDate.of(2018, 1, 1),
        null,
        "Essi",
        "Eskarilainen",
        null,
        "",
        "",
        "",
        "",
        null,
        "",
        null,
        restrictedDetailsEnabled = false,
    )
    val invoiceRow1 = InvoiceRowDetailed(
        InvoiceRowId(UUID.randomUUID()),
        child1,
        1,
        24300,
        LocalDate.of(2021, 1, 1),
        LocalDate.of(2021, 1, 31),
        ProductKey("DAYCARE"),
        DaycareId(UUID.randomUUID()),
        "",
        ProviderType.MUNICIPAL,
        setOf(CareType.CENTRE),
        "2627",
        null,
        null,
        "kuvaus1",
        correctionId = null,
        note = null,
    )
    val invoiceRow2 = InvoiceRowDetailed(
        InvoiceRowId(UUID.randomUUID()),
        child2,
        1,
        48200,
        LocalDate.of(2021, 1, 1),
        LocalDate.of(2021, 1, 31),
        ProductKey("PRESCHOOL_WITH_DAYCARE"),
        DaycareId(UUID.randomUUID()),
        "",
        ProviderType.PURCHASED,
        setOf(CareType.CENTRE),
        "2627",
        null,
        null,
        "kuvaus2",
        correctionId = null,
        note = null,
    )
    val invoiceRow3 = InvoiceRowDetailed(
        InvoiceRowId(UUID.randomUUID()),
        child3,
        1,
        25000,
        LocalDate.of(2021, 1, 1),
        LocalDate.of(2021, 1, 31),
        ProductKey("DAYCARE"),
        DaycareId(UUID.randomUUID()),
        "",
        ProviderType.MUNICIPAL,
        setOf(CareType.FAMILY),
        "2627",
        null,
        null,
        "",
        correctionId = null,
        note = null,
    )
    val invoiceRow4 = InvoiceRowDetailed(
        InvoiceRowId(UUID.randomUUID()),
        child4,
        1,
        -25000,
        LocalDate.of(2021, 1, 1),
        LocalDate.of(2021, 1, 31),
        ProductKey("FREE_OF_CHARGE"),
        DaycareId(UUID.randomUUID()),
        "",
        ProviderType.MUNICIPAL,
        setOf(CareType.FAMILY),
        "2627",
        null,
        null,
        "kuvaus4",
        correctionId = null,
        note = null,
    )
    val invoiceRow5 = InvoiceRowDetailed(
        InvoiceRowId(UUID.randomUUID()),
        child1,
        1,
        -25000,
        LocalDate.of(2021, 1, 1),
        LocalDate.of(2021, 1, 31),
        ProductKey("FREE_OF_CHARGE"),
        DaycareId(UUID.randomUUID()),
        "",
        ProviderType.MUNICIPAL,
        setOf(CareType.CENTRE),
        "2627",
        null,
        null,
        "kuvaus5",
        correctionId = null,
        note = null,
    )
    val invoiceRow6 = InvoiceRowDetailed(
        InvoiceRowId(UUID.randomUUID()),
        child5,
        1,
        24300,
        LocalDate.of(2021, 1, 1),
        LocalDate.of(2021, 1, 15),
        ProductKey("DAYCARE"),
        DaycareId(UUID.randomUUID()),
        "",
        ProviderType.MUNICIPAL,
        setOf(CareType.CENTRE, CareType.PRESCHOOL),
        "2627",
        null,
        null,
        "alkukuukausi vakaa",
        correctionId = null,
        note = null,
    )
    val invoiceRow7 = InvoiceRowDetailed(
        InvoiceRowId(UUID.randomUUID()),
        child5,
        1,
        24300,
        LocalDate.of(2021, 1, 16),
        LocalDate.of(2021, 1, 31),
        ProductKey("PRESCHOOL_WITH_DAYCARE"),
        DaycareId(UUID.randomUUID()),
        "",
        ProviderType.MUNICIPAL,
        setOf(CareType.CENTRE, CareType.PRESCHOOL),
        "2627",
        null,
        null,
        "loppukuukausi eskaria",
        correctionId = null,
        note = null,
    )
    return InvoiceDetailed(
        (InvoiceId(UUID.randomUUID())),
        InvoiceStatus.WAITING_FOR_SENDING,
        LocalDate.of(2022, 5, 5),
        LocalDate.of(2022, 5, 5),
        LocalDate.of(2021, 3, 6),
        LocalDate.of(2021, 2, 4),
        null,
        AreaId(UUID.randomUUID()),
        headOfFamily,
        null,
        listOf(invoiceRow1, invoiceRow2, invoiceRow3, invoiceRow4, invoiceRow5, invoiceRow6, invoiceRow7),
        null,
        null,
        HelsinkiDateTime.Companion.of(
            LocalDateTime.of(2022, 5, 5, 1, 1),
        ),
        emptyList(),
        0,
        null,
        null,
        null,
        emptyList(),
    )
}

fun validPerson() = PersonDetailed(
    PersonId(UUID.randomUUID()),
    LocalDate.of(1982, 3, 31),
    null,
    "Tes Matilda Josefina",
    "Bengtsson-Henriksson",
    "310382-956D",
    "Meikäläisenkuja 6 B 7",
    "90100",
    "OULU",
    "",
    null,
    "",
    null,
    restrictedDetailsEnabled = false,
)

fun personWithoutSSN() = PersonDetailed(
    PersonId(UUID.randomUUID()),
    LocalDate.of(1982, 3, 31),
    null,
    "Maija",
    "Meikäläinen",
    null,
    "Meikäläisenkuja 6 B 7",
    "90100",
    "OULU",
    "",
    null,
    "",
    null,
    restrictedDetailsEnabled = false,
)

fun personWithRestrictedDetails() = PersonDetailed(
    PersonId(UUID.randomUUID()),
    LocalDate.of(1982, 3, 31),
    null,
    "Mysteeri",
    "Meikäläinen",
    "280691-943Z",
    "Todistajansuojeluohjelmankatu 9",
    "45600",
    "OULU",
    "",
    null,
    "",
    null,
    restrictedDetailsEnabled = true,
)

fun personWithLongName() = PersonDetailed(
    PersonId(UUID.randomUUID()),
    LocalDate.of(1982, 3, 31),
    null,
    "Eskoensio Velipekka-Simopetteri",
    "von und zu Aaltonen-Räyhäkäinen",
    "310382-956D",
    "Aateliskulma 3",
    "90200",
    "OULU",
    "",
    null,
    "",
    null,
    restrictedDetailsEnabled = false,
)
