# SPDX-FileCopyrightText: 2021 City of Tampere
#
# SPDX-License-Identifier: LGPL-2.1-or-later

version: 2.1

orbs:
  aws-cli: circleci/aws-cli@4.0.0

aliases:
  - &workspace_root /home/circleci/repo
  - &workspace_apigw /home/circleci/repo/evaka/apigw
  - &workspace_evaka_frontend /home/circleci/repo/evaka/frontend
  - &workspace_tre_frontend /home/circleci/repo/frontend
  - &workspace_proxy /home/circleci/repo/evaka/proxy
  - &workspace_service /home/circleci/repo/service
  - &workspace_auth /home/circleci/repo/auth
  - &workspace_compose /home/circleci/repo/compose

  - &remote_docker_version "20.10.24"
  - &base_image cimg/base:current-22.04
  - &aws_image cimg/aws:2023.07
  - &reuse_image fsfe/reuse:1.1.2 # NOTE: Update bin/add-license-headers.sh to match
  - &openjdk_image cimg/openjdk:17.0
  - &postgres_image cimg/postgres:14.6
  - &s3mock_image adobe/s3mock:3.0.0
  - &ubuntu_machine_image ubuntu-2204:2023.07.2

  - &default_config
    working_directory: *workspace_root

  - &jvm_config
    <<: *default_config
    environment:
      GRADLE_OPTS: '-Dorg.gradle.daemon=false -Dorg.gradle.jvmargs="-XX:MaxRAMPercentage=80"'
      JAVA_TOOL_OPTIONS: "-XX:MaxRAMPercentage=80"

executors:
  base_executor:
    <<: *default_config
    docker:
      - image: *base_image
  aws_executor:
    <<: *default_config
    docker:
      - image: *aws_image
  reuse_tool:
    <<: *default_config
    docker:
      - image: *reuse_image
  openjdk_executor:
    <<: *jvm_config
    docker:
      - image: *openjdk_image
  service_test_executor:
    <<: *jvm_config
    docker:
      - image: *openjdk_image
      - image: *postgres_image
        environment:
          POSTGRES_USER: evaka_it
          POSTGRES_PASSWORD: evaka_it
          POSTGRES_DB: evaka_it
      - image: *s3mock_image
  e2e_executor:
    <<: *default_config
    machine:
      image: *ubuntu_machine_image
    environment:
      NODE_ENV: development
      BUILDKIT_PROGRESS: plain

commands:
  store_repo:
    steps:
      - persist_to_workspace:
          root: .
          paths:
            - .
  restore_repo:
    steps:
      - attach_workspace:
          at: .

  # Caching commands

  save:
    parameters:
      path:
        type: string
    steps:
      - save_cache:
          name: Save << parameters.path >>
          key: workspace-{{ .Environment.CIRCLE_WORKFLOW_WORKSPACE_ID }}-<< parameters.path >>
          paths:
            - << parameters.path >>
  restore:
    parameters:
      path:
        type: string
    steps:
      - restore_cache:
          name: Restore << parameters.path >>
          key: workspace-{{ .Environment.CIRCLE_WORKFLOW_WORKSPACE_ID }}-<< parameters.path >>

  store_service_gradle_wrapper:
    steps:
      - save_cache:
          name: Store gradle wrapper
          key: gradle-wrapper-service-v1-{{ checksum "service/gradle/wrapper/gradle-wrapper.properties" }}
          paths:
            - ~/.gradle/wrapper
            - ~/.gradle/notifications
  restore_service_gradle_wrapper:
    steps:
      - restore_cache:
          name: Restore gradle wrapper
          keys:
            - gradle-wrapper-service-v1-{{ checksum "service/gradle/wrapper/gradle-wrapper.properties" }}

  store_service_gradle_dependencies:
    steps:
      - save_cache:
          name: Store gradle dependencies
          key: gradle-dependencies-service-v1-{{ checksum "service/build.gradle.kts" }}-{{ checksum "evaka/service/gradle/libs.versions.toml" }}-{{ checksum "evaka/evaka-bom/build.gradle.kts" }}
          paths:
            - ~/.gradle/caches/jars-9
            - ~/.gradle/caches/journal-1
            - ~/.gradle/caches/modules-2
            - ~/.gradle/caches/transforms-3
  restore_service_gradle_dependencies:
    steps:
      - restore_cache:
          name: Restore gradle dependencies
          keys:
            - gradle-dependencies-service-v1-{{ checksum "service/build.gradle.kts" }}-{{ checksum "evaka/service/gradle/libs.versions.toml" }}-{{ checksum "evaka/evaka-bom/build.gradle.kts" }}
            - gradle-dependencies-service-v1-{{ checksum "service/build.gradle.kts" }}-{{ checksum "evaka/service/gradle/libs.versions.toml" }}-
            - gradle-dependencies-service-v1-{{ checksum "service/build.gradle.kts" }}-
            - gradle-dependencies-service-v1-

  store_service_gradle_build_cache:
    steps:
      - save_cache:
          name: Store gradle build cache
          key: gradle-build-cache-service-v1-{{ .Branch }}-{{ .Environment.CIRCLE_WORKFLOW_WORKSPACE_ID }}
          paths:
            - ~/.gradle/caches/8.2.1
            - ~/.gradle/caches/build-cache-1
  restore_service_gradle_build_cache:
    steps:
      - restore_cache:
          name: Restore gradle build cache
          keys:
            - gradle-build-cache-service-v1-{{ .Branch }}-{{ .Environment.CIRCLE_WORKFLOW_WORKSPACE_ID }}
            - gradle-build-cache-service-v1-{{ .Branch }}-
            - gradle-build-cache-service-v1-main-
            - gradle-build-cache-service-v1-

  # Misc commands

  login_docker_hub:
    description: Log in to Docker Hub for authenticated pulls
    steps:
      - run: echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
  login_ecr:
    steps:
      - run:
          name: Log into Amazon ECR
          command: aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 518207624130.dkr.ecr.eu-west-1.amazonaws.com

  setup_authenticated_remote_docker:
    description: Setup remote Docker execution environment with Docker Hub authentication
    parameters:
      docker_layer_caching:
        type: boolean
        default: false
    steps:
      - setup_remote_docker:
          version: *remote_docker_version
          docker_layer_caching: << parameters.docker_layer_caching >>
      #- login_docker_hub

  frontend_install:
    parameters:
      include_e2e:
        type: boolean
        default: false
    steps:
      - restore_cache:
          keys:
            - yarn-cache-frontend-v1-{{ checksum "evaka/frontend/yarn.lock" }}
            - yarn-cache-frontend-v1-
            - yarn-cache-frontend-
      - run:
          working_directory: *workspace_evaka_frontend
          command: yarn install --immutable
          environment:
            PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
      - save_cache:
          key: yarn-cache-frontend-v1-{{ checksum "evaka/frontend/yarn.lock" }}
          paths:
            - evaka/frontend/.yarn/cache
            - /home/circleci/.npm/sentry-cli
      - when:
          condition:
            equal: [true, << parameters.include_e2e >>]
          steps:
            - restore_cache:
                name: Restore e2e yarn cache
                keys:
                  - yarn-cache-e2e-v3-{{ checksum "frontend/yarn.lock" }}
                  - yarn-cache-e2e-v3-
                  - yarn-cache-e2e-
            - restore_cache:
                name: Restore playwright browser cache
                keys:
                  - playwright-browser-cache-v1-{{ checksum "frontend/yarn.lock" }}
                  - playwright-browser-cache-v1-
                  - playwright-browser-cache-
            - run:
                working_directory: *workspace_tre_frontend
                command: yarn install --immutable
            - save_cache:
                name: Store playwright browser cache
                key: playwright-browser-cache-v1-{{ checksum "frontend/yarn.lock" }}
                paths:
                  - /home/circleci/.cache/ms-playwright
            - save_cache:
                name: Store e2e yarn cache
                key: yarn-cache-e2e-v3-{{ checksum "frontend/yarn.lock" }}
                paths:
                  - frontend/.yarn/cache

  build_docker_image:
    parameters:
      image:
        type: string
      dir:
        type: string
      contexts:
        type: string
        default: ""
    steps:
      - login_ecr
      - run:
          name: Build docker image
          working_directory: << parameters.dir >>
          command: |
            for context in $(eval echo << parameters.contexts >> | tr ',' '\n'); do
              CONTEXT_ARGS="$CONTEXT_ARGS --build-context=$context"
            done
            docker buildx build --progress=plain \
              -t 518207624130.dkr.ecr.eu-west-1.amazonaws.com/<< parameters.image >>:${CIRCLE_SHA1} \
              --build-arg "build=${CIRCLE_BUILD_NUM}" \
              --build-arg "commit=${CIRCLE_SHA1}" \
              $CONTEXT_ARGS \
              --push \
              .

jobs:
  # MISC JOBS

  checkout_repo:
    executor: base_executor
    resource_class: small
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      - store_repo

  check_licenses:
    executor: reuse_tool
    resource_class: small
    steps:
      - restore_repo
      - run:
          name: reuse lint
          command: |
            reuse lint || {
              echo '';
              echo '=========================================';
              echo 'Please run: ./bin/add-license-headers.sh';
              echo '=========================================';
              exit 1
            }

  # BUILD JOBS

  apigw_build_image:
    executor: aws_executor
    resource_class: medium
    steps:
      - restore_repo
      - setup_authenticated_remote_docker:
          docker_layer_caching: true
      - build_docker_image:
          image: trevaka/api-gateway
          dir: *workspace_apigw

  frontend_build:
    executor: aws_executor
    resource_class: medium+
    steps:
      - restore_repo
      - frontend_install
      - run:
          name: Fetch commercial frontend dependencies
          working_directory: *workspace_evaka_frontend
          command: |
            aws s3 sync s3://trevaka-artifacts/vendor/fortawesome/ ./vendor/fortawesome/
      - run:
          name: Unpack commercial frontend dependencies
          working_directory: *workspace_evaka_frontend
          command: |
            ./unpack-pro-icons.sh
      - run:
          name: link customizations
          working_directory: *workspace_evaka_frontend
          command: ln -v -s $(readlink -f ../../frontend/tampere) src/lib-customizations/tampere
      - run:
          name: yarn build
          working_directory: *workspace_evaka_frontend
          environment:
            SENTRY_NO_PROGRESS_BAR: "1"
            EVAKA_CUSTOMIZATIONS: tampere
            NODE_OPTIONS: "--max-old-space-size=4096"
          command: |
            export APP_COMMIT="$CIRCLE_SHA1"
            ICONS=pro yarn build
      - save:
          path: evaka/frontend/dist
      - run:
          name: Create archive
          working_directory: /home/circleci/repo/evaka
          command: |
            tar -cvf dist.tar --directory frontend/dist/bundle/ --transform 's,^\.,frontend,' .
            tar -rvf dist.tar --directory frontend/src/ --transform 's,^,frontend/,' maintenance-page-frontend
            gzip dist.tar
      - run:
          name: Upload archive
          working_directory: /home/circleci/repo/evaka
          command: aws s3 cp dist.tar.gz s3://trevaka-artifacts/frontend/${CIRCLE_SHA1}.tar.gz

  proxy_build_image:
    executor: aws_executor
    resource_class: medium
    steps:
      - restore_repo
      - setup_authenticated_remote_docker
      - build_docker_image:
          image: trevaka/proxy
          dir: *workspace_proxy

  service_build:
    executor: openjdk_executor
    resource_class: medium+
    steps:
      - restore_repo
      - restore_service_gradle_wrapper
      - restore_service_gradle_dependencies
      - restore_service_gradle_build_cache
      - run:
          working_directory: *workspace_service
          command: ./gradlew --build-cache assemble testClasses
      - store_service_gradle_build_cache
      - store_service_gradle_dependencies
      - store_service_gradle_wrapper
      - save:
          path: service/build/libs/trevaka-service.jar

  service_test:
    executor: service_test_executor
    resource_class: medium+
    steps:
      - restore_repo
      - restore_service_gradle_wrapper
      - restore_service_gradle_dependencies
      - restore_service_gradle_build_cache
      - run:
          working_directory: *workspace_service
          command: ./gradlew --build-cache check
      - store_test_results:
          path: /home/circleci/repo/service/build/test-results/
      - store_artifacts:
          path: /home/circleci/repo/service/build/reports/

  service_build_image:
    executor: aws_executor
    resource_class: medium
    steps:
      - restore_repo
      - restore:
          path: service/build/libs/trevaka-service.jar
      - setup_authenticated_remote_docker:
          docker_layer_caching: true
      - run:
          name: Unzip executable
          working_directory: *workspace_service
          command: unzip -q build/libs/trevaka-service.jar -d target
      - build_docker_image:
          image: trevaka/service
          dir: *workspace_service

  auth_build_image:
    executor: aws_executor
    resource_class: medium
    steps:
      - restore_repo
      - setup_authenticated_remote_docker:
          docker_layer_caching: true
      - build_docker_image:
          image: trevaka/auth
          dir: *workspace_auth
          contexts: core=../evaka/keycloak

  scheduled_tasks_reporting_build_image:
    executor: aws_executor
    resource_class: medium
    steps:
      - restore_repo
      - setup_authenticated_remote_docker:
          docker_layer_caching: true
      - build_docker_image:
          image: trevaka/scheduled-task/reporting
          dir: scheduled-tasks/reporting

  scheduled_tasks_logs_build_image:
    executor: aws_executor
    resource_class: medium
    steps:
      - restore_repo
      - setup_authenticated_remote_docker:
          docker_layer_caching: true
      - build_docker_image:
          image: trevaka/scheduled-task/logs
          dir: scheduled-tasks/logs

  trigger_deploy:
    executor: base_executor
    resource_class: small
    steps:
      - run:
          name: Trigger deploy
          command: |
            curl --request POST \
              --url https://circleci.com/api/v2/project/github/Tampere/trevaka-infra/pipeline \
              --user ''$CIRCLE_TOKEN':' \
              --header 'content-type: application/json' \
              --data '{"branch":"main","parameters":{"workflow":"deploy_pipeline","version":"'$CIRCLE_SHA1'"}}'

  e2e_test:
    executor: e2e_executor
    resource_class: large
    steps:
      - restore_repo
      - restore:
          path: evaka/frontend/dist
      - login_ecr
      - run:
          name: Start up compose stack
          working_directory: *workspace_compose
          command: |
            CI=true LOCAL_DIR='../evaka/frontend' \
            EVAKA_GW_IMAGE=518207624130.dkr.ecr.eu-west-1.amazonaws.com/trevaka/api-gateway:${CIRCLE_SHA1} \
            EVAKA_SRV_IMAGE=518207624130.dkr.ecr.eu-west-1.amazonaws.com/trevaka/service:${CIRCLE_SHA1} \
            ./compose-e2e up -d --build
      - frontend_install:
          include_e2e: true
      - run:
          name: Waiting for compose stack to be up...
          working_directory: *workspace_evaka_frontend
          command: ./wait-for-url.sh "http://localhost:9999/api/internal/dev-api"
      - run:
          name: Run E2E tests
          working_directory: *workspace_tre_frontend
          command: yarn e2e-ci-playwright
          environment:
            HEADLESS: true
            BASE_URL: http://localhost:9999
            JEST_JUNIT_OUTPUT_DIR: test-results
      - run:
          name: yarn lint
          working_directory: *workspace_evaka_frontend
          command: |
            echo 'src/*' >> .eslintignore
            echo '!src/lib-customizations' >> .eslintignore
            echo 'src/lib-customizations/*' >> .eslintignore
            echo '!src/lib-customizations/tampere' >> .eslintignore
            yarn lint
      - run:
          name: Collect docker-compose logs
          working_directory: *workspace_compose
          command: ./compose-e2e logs --tail=all > /tmp/docker-compose-logs.txt
          when: always
      - store_artifacts:
          path: /tmp/docker-compose-logs.txt
          destination: docker-compose-logs.txt
      - store_artifacts:
          path: frontend/screenshots
          destination: screenshots
      - store_artifacts:
          path: frontend/videos
          destination: videos
      - store_test_results:
          path: frontend/test-results

workflows:
  version: 2
  build_test_and_deploy:
    when:
      not:
        equal: [scheduled_pipeline, << pipeline.trigger_source >>]
    jobs:
      - checkout_repo
      - check_licenses:
          requires:
            - checkout_repo

      - apigw_build_image:
          context:
            - trevaka-utility
          requires:
            - checkout_repo

      - frontend_build:
          context:
            - trevaka-utility
          requires:
            - checkout_repo

      - e2e_test:
          context:
            - trevaka-utility
          requires:
            - frontend_build
            - apigw_build_image
            - service_build_image

      - proxy_build_image:
          context:
            - trevaka-utility
          requires:
            - checkout_repo

      - service_build:
          requires:
            - checkout_repo
      - service_test:
          requires:
            - service_build
      - service_build_image:
          context:
            - trevaka-utility
          requires:
            - service_build

      - auth_build_image:
          context:
            - trevaka-utility
          requires:
            - checkout_repo

      - scheduled_tasks_reporting_build_image:
          context:
            - trevaka-utility
          requires:
            - checkout_repo
      - scheduled_tasks_logs_build_image:
          context:
            - trevaka-utility
          requires:
            - checkout_repo

      - trigger_deploy:
          context:
            - trevaka-infra
          requires:
            - check_licenses
            - proxy_build_image
            - service_test
            - auth_build_image
            - scheduled_tasks_reporting_build_image
            - scheduled_tasks_logs_build_image
            - e2e_test
          filters:
            branches:
              only:
                - main
